//Load exception handler
load (7, 1);
load (8, 2);

//assign PID 0 to INIT program
[READY_LIST + 0] = 0;

//load INIT program
load (25, 21);
load (26, 22);
load (27, 23);

PTBR = PAGE_TABLE;
PTLR = 4;

alias i S0;
alias j S1;
i = 0;
j = 25;
while (i <= 6) do
	[PTBR + i] = j; // Physical Page Number for Logical Page 0
	[PTBR + i+1] = "01"; // Auxiliary Information for Logical Page 0
	i = i + 2;
	j = j + 1;
endwhile;

// Sets the entry for STATE as Running
[READY_LIST + 1] = 2; 

[READY_LIST + 31] = -1; 

breakpoint;

SP = 3 * 512;

[28 * 512] = 0;

breakpoint;

//load interupt 1
load (11, 5);
load (12, 6);

//load interupt 2
load (13, 7);
load (14, 8);

//load interupt 3
load (15, 9);
load (16, 10);

//load interupt 4
load (17, 11);
load (18, 12);

//load interupt 5
load (19, 13);
load (20, 14);

//load interupt 6
load (21, 15);
load (22, 16);

//load interupt 7
load (23, 17);
load (24, 18);


//load timer interupt
load (9, 3);
load (10, 4);

//load FAT from disk 
load (5, 19);

//load Disk Free List
load (6, 20);

//setting all entries of System wide open file table to invalid
alias counter S0;
counter = 0;
while (counter < 128) do					//64 enteries, each of size 2
	[FILE_TABLE + counter + 0] = -1;		//FAT index to -1
	[FILE_TABLE + counter + 1] = 0;			//File open count to 0
	counter = counter + 2;					//Move to next entry
endwhile;

//setting all entries of per-process open file table to invalid
alias i S0;
i = 0;
while (i < 8) do							//8 entries, each of size 2
	[READY_LIST + 15 + ( i*2 ) + 0] = -1;	//Entry in system wide file table
	[READY_LIST + 15 + ( i*2 ) + 1] = -1;	//LSEEK position
	i = i + 1;								//Move to next entry
endwhile;

i = 0;
while (i < 24) do
	[1280 + i] = 1;
	i = i + 1;
endwhile;

while (i<64) do
	[1280 + i] = 0;
	i = i+1;
endwhile;

//initialize all PCBs with STATE 0
i = 0;
while (i < 32) do
	[READY_LIST + i*32 + 1] = 0;					//STATE to 0
	i = i + 1;
endwhile;

ireturn;